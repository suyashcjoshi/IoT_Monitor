# Telegraf Configuration for Data Center Monitoring
[global_tags]
  datacenter = "london-dc-01"
  environment = "production"
  facility = "tier-3"

[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "5s"
  flush_interval = "30s"
  flush_jitter = "5s"
  precision = ""
  hostname = "dc-monitoring-host"

# System Resource Monitoring (simulating server metrics)
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false
  [inputs.cpu.tags]
    component = "server_cpu"
    rack = "monitoring-rack"

[[inputs.mem]]
  [inputs.mem.tags]
    component = "server_memory"
    rack = "monitoring-rack"

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
  [inputs.disk.tags]
    component = "server_storage"
    rack = "monitoring-rack"

[[inputs.net]]
  interfaces = ["eth0", "en0"]
  [inputs.net.tags]
    component = "server_network"
    rack = "monitoring-rack"

# Docker container monitoring (for our stack)
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  container_names = []
  source_tag = false
  container_name_include = []
  container_name_exclude = []
  timeout = "5s"
  [inputs.docker.tags]
    component = "container_metrics"

# Output to Kafka for streaming to Airbyte
[[outputs.kafka]]
  brokers = ["kafka:29092"]
  topic = "datacenter-infrastructure"
  
  # Use JSON format for easier consumption
  data_format = "json"
  json_timestamp_units = "1ms"
  
  # Kafka settings
  batch_size = 100
  required_acks = 1
  max_retry = 3
  
  # Add metadata for data center context
  [outputs.kafka.tagpass]
    # Send all metrics from our monitoring

# Also output to console for debugging (optional)
[[outputs.file]]
  files = ["stdout"]
  data_format = "influx"
  
  # Only log a sample for debugging
  [outputs.file.tagpass]
    component = ["server_cpu"]
